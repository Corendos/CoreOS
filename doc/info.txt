-------- I. General knowledge --------

When booting, the GPU loads the kernel.


In the documentation, the peripherals adresses are given at bus adress and must be translated
to physical adress.
0x7Ennnnnn -> 0x20nnnnnn

By default the GPU has 64Mb of memory and the remaining part is given to the CPU.

The BCM2837 is the same as the BCM2836 except that the processor is a Cortex-A53 instead of the Cortex-A7


Procedure to activate a process:
	- Store the stack pointer in r0
		call activate(stack_pointer)
	- Save kernel space -> push
	- Change the stack pointer value
	- Load user state -> pop
	- Jump to the task

	The register r4 - r12, r14, r15 are saved.
	We must put the adress of the start code in r15 because we branch to this adress


	The stack grows downward
	Example:
		push {r4 - r12}

		+--------+
		|   r4   |
		+--------+
		|   r5   |
		+--------+
		|   r6   |
		+--------+
		|   r7   |
		+--------+
		|   r8   |
		+--------+
		|   r9   |
		+--------+
		|  r10   |
		+--------+
		|  r11   |
		+--------+
		|  r12   |
		+--------+

	When creating a stack, we now that the user stack looks like this:

		+-----+--------+
		|  9  |   r4   |
		+-----+--------+
		|  8  |   r5   |
		+-----+--------+
		|  7  |   r6   |
		+-----+--------+
		|  6  |   r7   |
		+-----+--------+
		|  5  |   r8   |
		+-----+--------+
		|  4  |   r9   |
		+-----+--------+
		|  3  |  r10   |
		+-----+--------+
		|  2  |  r11   |
		+-----+--------+
		|  1  |  r12   |
		+-----+--------+
		|  0  |  r15   |
		+-----+--------+



Stack Pointer: r13
Link register: r14
Program Counter: r15
